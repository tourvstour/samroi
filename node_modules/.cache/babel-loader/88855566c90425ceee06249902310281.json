{"ast":null,"code":"var storName = {\n  score: []\n};\n\nvar reducers = function reducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : storName;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD\":\n      var numAdd = action.datas.num,\n          listAdd = action.datas.list,\n          valueAdd = action.datas.values;\n\n      var input = function input() {\n        if (state.score.length == \"0\") {\n          var stat = \"insert_f\";\n          return stat;\n        } else {\n          state.score.forEach(function (Arrays) {\n            // console.log(numStore, listStore, valueStore, numAdd, listAdd, valueAdd)\n            if (numStore === numAdd && listStore === listAdd && valueStore != valueAdd) {\n              var _stat = \"update\";\n              return _stat;\n            } else {\n              var _stat2 = \"insert_l\";\n              return _stat2;\n            }\n          });\n        }\n      };\n\n      var mess = input();\n      console.log(mess);\n\n      if (mess === \"insert_f\") {\n        return Object.assign({}, state, {\n          score: state.score.concat([action.datas])\n        });\n      } else if (mess === \"insert_l\") {\n        return Object.assign({}, state, {\n          score: state.score.concat([action.datas])\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["I:\\ANYcode\\react\\ther-app\\src\\reducers.js"],"names":["storName","score","reducers","state","action","type","numAdd","datas","num","listAdd","list","valueAdd","values","input","length","stat","forEach","Arrays","numStore","listStore","valueStore","mess","console","log","Object","assign","concat"],"mappings":"AAAA,IAAMA,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE;AADM,CAAjB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAA8B;AAAA,MAA7BC,KAA6B,uEAArBH,QAAqB;AAAA,MAAXI,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACG,UACKC,MAAM,GAAGF,MAAM,CAACG,KAAP,CAAaC,GAD3B;AAAA,UAEKC,OAAO,GAAGL,MAAM,CAACG,KAAP,CAAaG,IAF5B;AAAA,UAGKC,QAAQ,GAAGP,MAAM,CAACG,KAAP,CAAaK,MAH7B;;AAIC,UAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,YAAIV,KAAK,CAACF,KAAN,CAAYa,MAAZ,IAAsB,GAA1B,EAA+B;AAC3B,cAAIC,IAAI,GAAG,UAAX;AACA,iBAAQA,IAAR;AACH,SAHD,MAIK;AACDZ,UAAAA,KAAK,CAACF,KAAN,CAAYe,OAAZ,CAAoB,UAAAC,MAAM,EAAI;AAC1B;AACA,gBAAIC,QAAQ,KAAKZ,MAAb,IAAuBa,SAAS,KAAKV,OAArC,IAAgDW,UAAU,IAAIT,QAAlE,EAA4E;AACxE,kBAAII,KAAI,GAAG,QAAX;AACA,qBAAQA,KAAR;AACH,aAHD,MAIK;AACD,kBAAIA,MAAI,GAAG,UAAX;AACA,qBAAQA,MAAR;AACH;AAEJ,WAXD;AAYH;AACJ,OAnBD;;AAoBA,UAAIM,IAAI,GAAGR,KAAK,EAAhB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,KAAK,UAAb,EAAyB;AACrB,eAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtB,KAAlB,EAAyB;AAC5BF,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYyB,MAAZ,CAAmB,CAACtB,MAAM,CAACG,KAAR,CAAnB;AADqB,SAAzB,CAAP;AAGH,OAJD,MAKK,IAAIc,IAAI,KAAK,UAAb,EAAyB;AAC1B,eAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtB,KAAlB,EAAyB;AAC5BF,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYyB,MAAZ,CAAmB,CAACtB,MAAM,CAACG,KAAR,CAAnB;AADqB,SAAzB,CAAP;AAGH;;AACL;AACI,aAAOJ,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,QAAf","sourcesContent":["const storName = {\r\n    score: [],\r\n\r\n}\r\n\r\nconst reducers = (state = storName, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n           let\r\n                numAdd = action.datas.num,\r\n                listAdd = action.datas.list,\r\n                valueAdd = action.datas.values\r\n            const input = () => {\r\n                if (state.score.length == \"0\") {\r\n                    let stat = \"insert_f\"\r\n                    return (stat)\r\n                }\r\n                else {\r\n                    state.score.forEach(Arrays => {\r\n                        // console.log(numStore, listStore, valueStore, numAdd, listAdd, valueAdd)\r\n                        if (numStore === numAdd && listStore === listAdd && valueStore != valueAdd) {\r\n                            let stat = \"update\"\r\n                            return (stat)\r\n                        }\r\n                        else {\r\n                            let stat = \"insert_l\"\r\n                            return (stat)\r\n                        }\r\n\r\n                    });\r\n                }\r\n            }\r\n            let mess = input();\r\n            console.log(mess)\r\n            if (mess === \"insert_f\") {\r\n                return Object.assign({}, state, {\r\n                    score: state.score.concat([action.datas])\r\n                })\r\n            }\r\n            else if (mess === \"insert_l\") {\r\n                return Object.assign({}, state, {\r\n                    score: state.score.concat([action.datas])\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}