{"ast":null,"code":"var storName = {\n  score: []\n};\n\nvar reducers = function reducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : storName;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD\":\n      // console.log(action.datas.num)\n      // console.log(state.score.map(a => a.num))\n      if (state.score.length == \"0\") {\n        Object.assign(state, {\n          score: state.score.concat([action.datas])\n        });\n      } else {\n        state.score.forEach(function (Arrays) {\n          var numStore = Arrays.num,\n              listStore = Arrays.list,\n              valueStore = Arrays.values,\n              numAdd = action.datas.num,\n              listAdd = action.datas.list,\n              valueAdd = action.datas.values;\n          console.log(numStore, listStore, valueStore, numAdd, listAdd, valueAdd);\n\n          if (numStore === numAdd && listStore === listAdd && valueStore != valueAdd) {\n            console.log(\"update\");\n          } else {\n            console.log(\"succ\");\n          }\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["I:\\ANYcode\\react\\ther-app\\src\\reducers.js"],"names":["storName","score","reducers","state","action","type","length","Object","assign","concat","datas","forEach","Arrays","numStore","num","listStore","list","valueStore","values","numAdd","listAdd","valueAdd","console","log"],"mappings":"AAAA,IAAMA,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE;AADM,CAAjB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAA8B;AAAA,MAA7BC,KAA6B,uEAArBH,QAAqB;AAAA,MAAXI,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI;AACA;AACA,UAAIF,KAAK,CAACF,KAAN,CAAYK,MAAZ,IAAsB,GAA1B,EAA+B;AAC3BC,QAAAA,MAAM,CAACC,MAAP,CAAcL,KAAd,EAAqB;AACjBF,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYQ,MAAZ,CAAmB,CAACL,MAAM,CAACM,KAAR,CAAnB;AADU,SAArB;AAGH,OAJD,MAKK;AACDP,QAAAA,KAAK,CAACF,KAAN,CAAYU,OAAZ,CAAoB,UAAAC,MAAM,EAAI;AAC1B,cAAIC,QAAQ,GAAGD,MAAM,CAACE,GAAtB;AAAA,cACIC,SAAS,GAAGH,MAAM,CAACI,IADvB;AAAA,cAEIC,UAAU,GAAGL,MAAM,CAACM,MAFxB;AAAA,cAGIC,MAAM,GAAGf,MAAM,CAACM,KAAP,CAAaI,GAH1B;AAAA,cAIIM,OAAO,GAAGhB,MAAM,CAACM,KAAP,CAAaM,IAJ3B;AAAA,cAKIK,QAAQ,GAAGjB,MAAM,CAACM,KAAP,CAAaQ,MAL5B;AAMAI,UAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAAsBE,SAAtB,EAAiCE,UAAjC,EAA6CE,MAA7C,EAAqDC,OAArD,EAA8DC,QAA9D;;AACA,cAAIR,QAAQ,KAAKM,MAAb,IAAuBJ,SAAS,KAAKK,OAArC,IAAgDH,UAAU,IAAII,QAAlE,EAA4E;AACxEC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,WAFD,MAGK;AACFD,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACF;AACJ,SAdD;AAeH;;AAEL;AACI,aAAOpB,KAAP;AA5BR;AA8BH,CA/BD;;AAiCA,eAAeD,QAAf","sourcesContent":["const storName = {\r\n    score: [],\r\n\r\n}\r\n\r\nconst reducers = (state = storName, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            // console.log(action.datas.num)\r\n            // console.log(state.score.map(a => a.num))\r\n            if (state.score.length == \"0\") {\r\n                Object.assign(state, {\r\n                    score: state.score.concat([action.datas])\r\n                });\r\n            }\r\n            else {\r\n                state.score.forEach(Arrays => {\r\n                    let numStore = Arrays.num,\r\n                        listStore = Arrays.list,\r\n                        valueStore = Arrays.values,\r\n                        numAdd = action.datas.num,\r\n                        listAdd = action.datas.list,\r\n                        valueAdd = action.datas.values\r\n                    console.log(numStore, listStore, valueStore, numAdd, listAdd, valueAdd)\r\n                    if (numStore === numAdd && listStore === listAdd && valueStore != valueAdd) {\r\n                        console.log(\"update\")\r\n                    }\r\n                    else {\r\n                       console.log(\"succ\")\r\n                    }\r\n                });\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}